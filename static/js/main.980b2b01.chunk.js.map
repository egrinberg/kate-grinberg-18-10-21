{"version":3,"sources":["assets/Magnifing-glass.svg","constants.js","redux/SnackBar/snackbarSlice.js","redux/Weather/weatherSlice.js","pages/WeatherPage.js","pages/FavoritePage.js","components/HeaderComponent.js","components/SnackBar.js","App.js","reportWebVitals.js","redux/reducers.js","index.js","redux/store.js"],"names":["_defs","_path","BASE_URL","process","API_KEY","END_POINT","darkThemeColors","background","main","appbar","container","paper","input","primary","light","secondary","success","error","button","hover","text","link","bottomLine","underline","placeholder","toggle","lightThemeColors","snackbarSlice","createSlice","name","initialState","visible","timeout","message","type","reducers","setSnackbar","state","action","payload","disableSnackbar","setSnackBar","dispatch","setTimeout","actions","weatherSlice","currentLocation","locationName","locationKey","currentWeather","forecast","loadingWeather","loadingForecast","favorites","locations","theme","setLocations","setCurrentLocation","LocalizedName","Key","setCurrentLocationWeather","setWeatherForecast","addToFavorite","favorite","id","push","removeFromFavorite","newFavorites","filter","fav","setTheme","setLoadingWeather","setLoadingForecast","_excluded","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgMagnifingGlass","_ref","svgRef","title","titleId","props","xmlns","width","height","viewBox","ref","className","d","transform","ForwardRef","WeatherPage","classes","useStyles","useDispatch","useSelector","weather","location","weatherLoading","forecastLoading","useState","search","setSearch","setFavorite","useEffect","locationId","a","params","URLSearchParams","append","request","paramsSerializer","result","value","encodeURIComponent","substr","axios","get","res","status","data","actionSnackBar","weatherActions","undefined","find","delayDebounceFn","clearTimeout","city","Grid","style","paddingTop","justifyContent","item","xs","StyledAutoComplete","options","autoHighlight","popupIcon","magnifier","filterOptions","getOptionLabel","option","onChange","e","newValue","onInputChange","event","newInputValue","renderInput","TextField","inputProps","currentWeatherContainer","paddingRight","paddingLeft","md","fontSize","fill","Typography","variant","center","Temperature","Metric","Value","Unit","Button","color","size","favoriteButton","startIcon","onClick","forecastContainer","DailyForecasts","map","day","sm","margin","Paper","elevation","itemWeather","moment","Date","format","Maximum","makeStyles","border","palette","marginTop","padding","borderRadius","backgroundColor","marginRight","textAlign","capitalize","textTransform","withStyles","popupIndicatorOpen","root","borderBottomColor","inputRoot","fontWeight","opacity","listbox","boxShadow","popupIndicator","clearIndicator","Autocomplete","FavoritePage","history","useHistory","space","cursor","WeatherText","HeaderComponent","styleMode","AppBar","position","appBar","Toolbar","minHeight","direction","alignItems","StyledToggleButtonGroup","exclusive","newAlignment","StyledToggleButton","toggleIcon","to","navButton","textDecoration","transition","grouped","spacing","shape","ToggleButtonGroup","ToggleButton","CustomizedSnackBars","snackBarOBJ","snackBar","Collapse","in","Alert","severity","top","right","zIndex","breakpoints","down","App","darkTheme","createTheme","typography","fontFamily","join","h1","subtitle1","subtitle2","overrides","lightTheme","ThemeProvider","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","RootReducer","combineReducers","snackBarSLice","store","preloadedState","middlewares","thunkMiddleware","enhancers","applyMiddleware","composedEnhancers","composeWithDevTools","createStore","configureAppStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.980b2b01.chunk.js","sourcesContent":["var _defs, _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgMagnifingGlass(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 10,\n    height: 10,\n    viewBox: \"0 0 13.295 13.295\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"style\", null, \"\\r\\n      .test {\\r\\n        fill: #0396E6;\\r\\n      }\\r\\n    \"))), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    className: \"test\",\n    d: \"M15.181,14.5l-3.116-3.116a5.708,5.708,0,1,0-.671.671l3.116,3.116a.476.476,0,0,0,.671-.671ZM2.951,7.7a4.757,4.757,0,1,1,4.758,4.76A4.757,4.757,0,0,1,2.951,7.7Z\",\n    transform: \"scale(0.8)\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgMagnifingGlass);\nexport default __webpack_public_path__ + \"static/media/Magnifing-glass.64a84931.svg\";\nexport { ForwardRef as ReactComponent };","export const BASE_URL = process.env.REACT_APP_BASE_URL + '/';\r\nexport const API_KEY = 'KhoZ0U2NnE57nkjeogZoA72E82vgsW44'\r\n\r\n\r\nexport const END_POINT = {\r\n  LOCATIONS: 'locations/v1/cities/autocomplete',\r\n  CURRENT_WEATHER:'currentconditions/v1',\r\n  FORECAST: 'forecasts/v1/daily/5day' \r\n};\r\n\r\n\r\nexport const darkThemeColors = {\r\n    background: { main: '#1A1A1A', appbar: '#292929', container: '#292929', paper: '#333333',input: '#232323' },\r\n    primary: { main: '#292929', light: '#656565' },\r\n    secondary: { main: '#292929' },    \r\n    success: { main: '#1B9B48' },\r\n    error: { main: '#EF2F10' },    \r\n    button: { main: '#0396E6', hover: '#1CAFFF', text: '#F9F9F9',  link: '#179AE1' },     \r\n    text: { main: '#F9F9F9', light: '#c4c4c4', input: '#AAAAAA', secondary: '#B7B7B7'  }, \r\n    input: {bottomLine: '#3A3A3A',underline: '#0396E6',placeholder: '#6C7678'},\r\n    toggle: {hover: '#3A3A3A' }\r\n\r\n\r\n  };\r\n  \r\n  \r\n  \r\n  export const lightThemeColors = {\r\n    background: { main: '#f6f6f6', appbar: '#d9d9d9', container: '#ffffff', paper: '#F6F6F6', input: '#ffffff' },\r\n    primary: { main: '#ffffff', light: '#e4e4e4' },\r\n    secondary: { main: '#e4e4e4'}, \r\n    success: { main: '#1B9B48' },\r\n    error: { main: '#F30B0B' },     \r\n    button: { main: '#0396E6', hover: '#1CAFFF', text: '#F9F9F9',  link: '#179AE1'}, \r\n    text: { main: '#1A1A1A', light: '#CBD6D9', input: '#F9F9F9',  secondary: '#6C7678'},\r\n    input: {bottomLine: '#E7E7E7',underline: '#0396E6',placeholder: '#BABABA'},\r\n    toggle: {hover: '#E7E7E7'}\r\n\r\n  };","import { createSlice } from '@reduxjs/toolkit';\r\n\r\n\r\nexport const snackbarSlice = createSlice({\r\n    name: 'snackBar',\r\n    initialState: {\r\n        visible: false,\r\n        timeout: 3000,\r\n        message: '',\r\n        type: 'success'// error | warning | info | success\r\n    },\r\n    reducers: {\r\n        setSnackbar: (state, action) => {                \r\n                state.visible = true\r\n                state.timeout = action.payload.timeout\r\n                state.message = action.payload.message\r\n                state.type = action.payload.type\r\n        },\r\n        disableSnackbar: (state, action) => {            \r\n            state.visible = false\r\n        },\r\n\r\n    },\r\n});\r\n\r\nlet timeoutInstance = null;\r\n\r\nexport const disableSnackBar = () => dispatch =>{\r\n  dispatch(disableSnackBar());\r\n  clearTimeout(timeoutInstance);\r\n}\r\n\r\nexport const setSnackBar = (type, message, timeout=2000) => dispatch =>{\r\n  dispatch(setSnackbar({type,message,timeout}))\r\n  timeoutInstance = setTimeout(() => {\r\n    dispatch(disableSnackbar());\r\n  }, timeout);\r\n}\r\n\r\nexport const {\r\n    setSnackbar,\r\n    disableSnackbar,\r\n} = snackbarSlice.actions;\r\n\r\nexport default snackbarSlice.reducer;\r\n\r\n","import axios from 'axios';\r\nimport { createSlice, current } from '@reduxjs/toolkit';\r\n\r\nimport { BASE_URL, END_POINT, API_KEY } from '../../constants';\r\nimport * as actionSnackBar from \"../SnackBar/snackbarSlice\";\r\nimport data from '../../config/dummy.json'\r\n\r\n\r\nexport const weatherSlice = createSlice({\r\n    name: 'weather',\r\n    initialState: {\r\n        currentLocation: {\r\n            locationName: 'Tel Aviv',\r\n            locationKey: '215854',\r\n            currentWeather: null,\r\n            forecast: null,\r\n            loadingWeather: false,\r\n            loadingForecast: false\r\n        },\r\n        favorites: [],\r\n        locations: [],\r\n        theme: 'dark'\r\n    },\r\n    reducers: {\r\n        setLocations: (state, action) => {\r\n            state.locations = action.payload;\r\n        },\r\n        setCurrentLocation: (state, action) => {\r\n            state.currentLocation.locationName = action.payload.LocalizedName\r\n            state.currentLocation.locationKey = action.payload.Key\r\n            \r\n        },\r\n        setCurrentLocationWeather: (state, action) => {\r\n            state.currentLocation.currentWeather = action.payload\r\n            state.currentLocation.loadingWeather = false\r\n        },\r\n        setWeatherForecast: (state, action) => {\r\n            state.currentLocation.forecast = action.payload\r\n            state.currentLocation.loadingForecast = false\r\n        },\r\n        addToFavorite: (state, action) => {\r\n            const favorites = state.favorites\r\n            const favorite = {\r\n                id: action.payload.locationKey,\r\n                name: action.payload.locationName,\r\n                currentWeather: action.payload.currentWeather\r\n            }\r\n            favorites.push(favorite)\r\n            state.favorites = favorites\r\n        },\r\n        removeFromFavorite: (state, action) => {\r\n            const newFavorites = state.favorites.filter((fav) => fav.id !== action.payload.locationKey)\r\n            state.favorites = newFavorites\r\n        },\r\n        setTheme: (state, action) => {\r\n            state.theme = action.payload\r\n        },\r\n        setLoadingWeather: (state,action) => {\r\n            state.currentLocation.loadingWeather = action.payload\r\n        },\r\n        setLoadingForecast: (state,action) => {\r\n            state.currentLocation.loadingForecast = action.payload\r\n        }\r\n\r\n\r\n    },\r\n});\r\n\r\nexport const getCurrentWeather = (locationId) => async (dispatch) => {\r\n    setLoadingWeather(true)\r\n    let params = new URLSearchParams();\r\n    params.append('apikey', API_KEY);\r\n    let request = {\r\n        params,\r\n        paramsSerializer: (params) => {\r\n            let result = '';\r\n            for (const [key, value] of params) {\r\n                result += `${key}=${encodeURIComponent(value)}&`;\r\n            }\r\n            return result.substr(0, result.length - 1);\r\n        },\r\n    };\r\n\r\n    try {\r\n        const res = await axios.get(BASE_URL + END_POINT.CURRENT_WEATHER + '/' + locationId, request);\r\n\r\n        if (res.status === 200) {\r\n            dispatch(setCurrentLocationWeather(res.data));\r\n        }\r\n\r\n    } catch (error) {\r\n        \r\n        dispatch(actionSnackBar.setSnackBar(\"error\", 'Server error', 2000));\r\n    }\r\n};\r\n\r\nexport const getWeatherForecast = (locationId) => async (dispatch) => {\r\n    setLoadingForecast(true)\r\n    let params = new URLSearchParams();\r\n    params.append('apikey', API_KEY);\r\n    params.append('metric', 'true')\r\n    let request = {\r\n        params,\r\n        paramsSerializer: (params) => {\r\n            let result = '';\r\n            for (const [key, value] of params) {\r\n                result += `${key}=${encodeURIComponent(value)}&`;\r\n            }\r\n            return result.substr(0, result.length - 1);\r\n        },\r\n    };\r\n    \r\n    try {\r\n        const res = await axios.get(BASE_URL + END_POINT.FORECAST + '/' + locationId, request);\r\n\r\n        if (res.status === 200) {        \r\n            dispatch(setWeatherForecast(res.data));\r\n        }\r\n    } catch (error) {\r\n        \r\n        dispatch(actionSnackBar.setSnackBar(\"error\", 'Server error', 2000));\r\n    }\r\n};\r\n\r\nexport const getLocationsData = (search) => async (dispatch) => {\r\n    \r\n    let params = new URLSearchParams();\r\n    if (search !== undefined && search !== null && search !== '') {\r\n        params.append('apikey', API_KEY);\r\n        params.append('q', search);\r\n    }\r\n\r\n\r\n    let request = {\r\n        params,\r\n        paramsSerializer: (params) => {\r\n            let result = '';\r\n            for (const [key, value] of params) {\r\n                result += `${key}=${encodeURIComponent(value)}&`;\r\n            }\r\n            return result.substr(0, result.length - 1);\r\n        },\r\n    };\r\n\r\n    try {\r\n        const res = await axios.get(BASE_URL + END_POINT.LOCATIONS, request);\r\n\r\n        if (res.status === 200) {\r\n            dispatch(setLocations(res.data));\r\n        }     \r\n        \r\n    } catch (error) {\r\n        \r\n        dispatch(actionSnackBar.setSnackBar(\"error\", 'Server error', 2000));\r\n    }\r\n};\r\n\r\nexport const addCityToFavorite = (city) => (dispatch) => {\r\n    try {\r\n        dispatch(addToFavorite(city))\r\n        dispatch(actionSnackBar.setSnackBar('success', `${city.locationName} is added to your favorites`, 3000))\r\n    }\r\n    catch (error) {\r\n        dispatch(actionSnackBar.setSnackBar(\"error\", 'Something went wrong', 2000));\r\n    }\r\n}\r\n\r\nexport const removeCityToFavorite = (city) => (dispatch) => {\r\n    try {\r\n        dispatch(removeFromFavorite(city))\r\n        dispatch(actionSnackBar.setSnackBar('success', `${city.locationName} is removed from your favorites`, 3000))\r\n    }\r\n    catch (error) {\r\n        dispatch(actionSnackBar.setSnackBar(\"error\", 'Something went wrong', 2000));\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport const {\r\n    setLocations,\r\n    setCurrentLocation,\r\n    setCurrentLocationWeather,\r\n    setWeatherForecast,\r\n    addToFavorite,\r\n    removeFromFavorite,\r\n    setTheme,\r\n    setLoadingWeather,\r\n    setLoadingForecast\r\n} = weatherSlice.actions;\r\n\r\nexport default weatherSlice.reducer;\r\n\r\n\r\n\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Grid, TextField, Typography, Button, Paper } from '@material-ui/core'\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles'\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport moment from 'moment'\r\n\r\n//redux\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport * as weatherActions from '../redux/Weather/weatherSlice'\r\n\r\n\r\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport CloudQueueIcon from '@material-ui/icons/CloudQueue';\r\nimport LocationCityIcon from '@material-ui/icons/LocationCity';\r\nimport { ReactComponent as MagnifingGlassIcon } from '../assets/Magnifing-glass.svg';\r\n\r\n\r\n\r\n\r\n\r\nfunction WeatherPage() {\r\n\r\n    const classes = useStyles()\r\n    const dispatch = useDispatch()\r\n    const locations = useSelector(state => state.weather.locations)\r\n    const location = useSelector(state => state.weather.currentLocation)\r\n    const weatherLoading = useSelector(state=>state.weather.currentLocation.loadingWeather)    \r\n    const favorites = useSelector(state => state.weather.favorites)\r\n    const forecast = useSelector(state => state.weather.currentLocation.forecast)\r\n    const forecastLoading = useSelector(state=>state.weather.currentLocation.loadingForecast) \r\n\r\n\r\n    const [search, setSearch] = useState(null)\r\n    const [currentLocation, setCurrentLocation] = useState(null)\r\n    const [favorite, setFavorite] = useState(false)\r\n\r\n\r\n    useEffect(() => {\r\n        setFavorite(false)\r\n        if (location) {\r\n                        \r\n            dispatch(weatherActions.getCurrentWeather(location.locationKey))\r\n            dispatch(weatherActions.getWeatherForecast(location.locationKey))\r\n            if (favorites.find(fav => fav.id === location.locationKey) !== undefined) {\r\n                setFavorite(true)\r\n            }\r\n        }\r\n    }, [location.locationName])\r\n\r\n    useEffect(() => {\r\n        if (search && search !== '') {\r\n            const delayDebounceFn = setTimeout(() => {\r\n                dispatch(weatherActions.getLocationsData(search))\r\n            }, 1000)\r\n            return () => clearTimeout(delayDebounceFn)\r\n        }\r\n        else {\r\n            dispatch(weatherActions.setLocations([]))\r\n        }\r\n    }, [search])\r\n\r\n    useEffect(() => {\r\n        if (currentLocation !== null && currentLocation !== undefined) {             \r\n            dispatch(weatherActions.setCurrentLocation(currentLocation))            \r\n        }\r\n    }, [currentLocation])\r\n\r\n    const addToFavorite = () => {\r\n        setFavorite(true)\r\n        dispatch(weatherActions.addCityToFavorite(location))\r\n\r\n    }\r\n    const removeFromFavorite = () => {\r\n        setFavorite(false)\r\n        dispatch(weatherActions.removeCityToFavorite(location))\r\n    }\r\n\r\n    return (\r\n        <Grid container style={{ paddingTop: 60 }} justifyContent='center'>\r\n            <Grid item xs={8} style={{ paddingTop: 40 }}>\r\n                <StyledAutoComplete\r\n                    id=\"city\"                                       \r\n                    options={locations && locations}\r\n                    autoHighlight\r\n                    popupIcon={<MagnifingGlassIcon className={classes.magnifier} />}\r\n                    filterOptions={(options, state) => options}\r\n                    getOptionLabel={(option) => option.LocalizedName || ''}\r\n                    onChange={(e, newValue) => setCurrentLocation(locations.find(item => item.Key === newValue?.Key))}                                       \r\n                    onInputChange={(event, newInputValue) => {\r\n                        setSearch(newInputValue)\r\n                    }}\r\n                    renderInput={(params) => {\r\n                        return (\r\n                            <TextField\r\n                                placeholder=\"City\"\r\n                                {...params}\r\n                                inputProps={{\r\n                                    ...params.inputProps,\r\n                                }}\r\n                            />\r\n                        )\r\n                    }}\r\n                />\r\n            </Grid>\r\n            {!weatherLoading && location && location.currentWeather && <Grid item xs={10} className={classes.currentWeatherContainer}>\r\n                <Grid container>\r\n                    <Grid item xs={12} style={{ paddingRight: 20, paddingLeft: 20 }}>\r\n                        <Grid container>\r\n                            <Grid item xs={12} md={6}>\r\n                                 <Grid container>\r\n                                    <Grid item>\r\n                                        <LocationCityIcon style={{ fontSize: 40, fill: '#1CAFFF' }} />\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        <Grid container>\r\n                                            <Grid item xs={12}>\r\n                                                <Typography variant='h1' className={classes.center}>{location.locationName}</Typography>\r\n                                            </Grid>\r\n                                            <Grid item xs={12}>\r\n                                                <Typography variant='subtitle2' className={classes.center}>{location.currentWeather[0].Temperature.Metric.Value} {location.currentWeather[0].Temperature.Metric.Unit}</Typography>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid item xs={12} md={6}>\r\n                                <Grid container justifyContent='flex-end'>\r\n                                    {favorite ?\r\n                                        <Button\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            size=\"large\"\r\n                                            className={classes.favoriteButton}\r\n                                            startIcon={<FavoriteIcon />}\r\n                                            onClick={(e) => removeFromFavorite()}\r\n                                        >\r\n                                            Remove from Favorite\r\n                                        </Button> :\r\n                                        <Button\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            size=\"large\"\r\n                                            className={classes.favoriteButton}\r\n                                            startIcon={<FavoriteBorderIcon />}\r\n                                            onClick={(e) => addToFavorite()}\r\n                                        >\r\n                                            Add to Favorite\r\n                                        </Button>}\r\n                                </Grid>\r\n\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        {/* <ScatteredClouds /> */}\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Grid container justifyContent='space-around' className={classes.forecastContainer}>\r\n                            {/* five day forecast */}\r\n                            {!forecastLoading && forecast && forecast.DailyForecasts.map((day, i) => (\r\n                                <Grid item xs={12} sm={8} md={2} style={{ margin: 5 }} key={i}>\r\n                                    <Paper elevation={3} className={classes.itemWeather}>\r\n                                        <Grid container justifyContent='center'>\r\n                                            <Grid item xs={12}>\r\n                                                <Typography className={classes.center} variant='subtitle1'>{moment(day.Date).format('dddd')}</Typography>\r\n                                            </Grid>\r\n                                            <Grid item xs={12}>\r\n                                                <Typography className={classes.center} variant='subtitle2'>{day.Temperature.Maximum.Value} {day.Temperature.Maximum.Unit}</Typography>\r\n                                            </Grid>\r\n                                            <Grid item xs={12} >\r\n                                                <Grid container justifyContent='center'>\r\n                                                    <CloudQueueIcon style={{ fill: '#1CAFFF' }} />\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Paper>\r\n                                </Grid>\r\n                            ))}\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n            }\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default WeatherPage\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    currentWeatherContainer: {\r\n        border: `1px solid ${theme.palette.primary.main}`,\r\n        marginTop: 40,\r\n        padding: 20,\r\n        borderRadius: 4,\r\n        backgroundColor: theme.palette.background.container\r\n\r\n    },\r\n    magnifier: {\r\n        width: 20,\r\n        height: 20,\r\n        marginRight: 10,\r\n    },\r\n    center: {\r\n        textAlign: 'center'\r\n    },\r\n    forecastContainer: {\r\n        marginTop: 30\r\n    },\r\n    capitalize: {\r\n        textTransform: 'capitalize'\r\n    },\r\n    border: {\r\n        border: '1px solif #E1EBEE'\r\n    },\r\n    favoriteButton: {\r\n        textTransform: 'capitalize',\r\n        width: 250,\r\n        backgroundColor: theme.palette.button.main,\r\n        '&:hover': {\r\n            backgroundColor: theme.palette.button.hover\r\n        },\r\n        color: theme.palette.button.text\r\n    },\r\n    itemWeather: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        padding: 5\r\n    },\r\n\r\n\r\n\r\n}))\r\n\r\nexport const StyledAutoComplete = withStyles((theme) => ({\r\n    popupIndicatorOpen: {\r\n        transform: 'rotate(0deg)',\r\n    },\r\n    root: {\r\n        '& .MuiFormControl-root ': {\r\n\r\n            '& .MuiInputBase-input': {\r\n                color: theme.palette.text.main, // Text color\r\n            },\r\n            '& .MuiInput-underline:before': {\r\n                borderBottomColor: theme.palette.input.placeholder, // Semi-transparent underline\r\n            },\r\n            '& .MuiInput-underline:hover:before': {\r\n                borderBottomColor: theme.palette.input.placeholder, // Solid underline on hover\r\n            },\r\n            '& .MuiInput-underline:after': {\r\n                borderBottomColor: theme.palette.input.underline, // Solid underline on focus\r\n            },\r\n        }\r\n    },\r\n    inputRoot: {\r\n        '&.MuiOutlinedInput-root ': {\r\n            borderRadius: 5,\r\n            height: '45px',\r\n\r\n        },\r\n        '&.MuiIconButton-root': {\r\n            color: '#212529'\r\n        },\r\n\r\n        color: theme.palette.input.placeholder,\r\n        fontWeight: 300,\r\n        fontSize: 16,\r\n        backgroundColor: 'inherit',\r\n        \"& input::placeholder\": {\r\n            color: theme.palette.input.placeholder,\r\n            fontSize: 16,\r\n            opacity: 1\r\n        },\r\n\r\n        '&[class*=\"MuiOutlinedInput-root\"] .MuiAutocomplete-input:first-child': {\r\n            padding: '3.3px 0'\r\n        },\r\n        '&.MuiAutocomplete-inputRoot[class*=\"MuiOutlinedInput-root\"]': {\r\n            padding: '2px 8px 4px 8px'\r\n        },\r\n        '& .MuiOutlinedInput-notchedOutline': {\r\n\r\n            border: 'none'\r\n        },\r\n        '&:hover .MuiOutlinedInput-notchedOutline': {\r\n\r\n            border: 'none'\r\n        },\r\n        '&.Mui-focused .MuiOutlinedInput-notchedOutline': {            \r\n            border: 'none'\r\n        }\r\n    },\r\n    paper: {\r\n        '&.MuiAutocomplete-paper': {\r\n            backgroundColor: theme.palette.input.main,\r\n            margin: 0,            \r\n            borderRadius: 5,\r\n            padding: 0,\r\n            width: '100%'\r\n        },\r\n        '& .MuiAutocomplete-noOptions': {\r\n            color: '#B6B6B6',\r\n            fontSize: 14\r\n        }\r\n    },\r\n    listbox: {\r\n        '&.MuiAutocomplete-listbox': {\r\n            '&::-webkit-scrollbar': {\r\n                width: '3px',\r\n                height: '3px'\r\n\r\n            },\r\n            '&::-webkit-scrollbar-track': {\r\n                boxShadow: 'inset 0 0 5px grey',\r\n                borderRadius: '10px'                \r\n            },\r\n            '&::-webkit-scrollbar-thumb': {\r\n                backgroundColor: '#FFFFFF',\r\n                borderRadius: '10px'\r\n            },\r\n          \r\n        }\r\n    },\r\n    popupIndicator: {\r\n        '&.MuiAutocomplete-popupIndicator': {\r\n            color: '#B6B6B6',\r\n            '& .MuiSvgIcon-root': {\r\n                width: '0.8em'\r\n            }\r\n        }\r\n    },\r\n    option: {\r\n        '&.MuiAutocomplete-option': {\r\n            color: '#B6B6B6',\r\n            fontSize: 14,\r\n            '&:hover': {\r\n                backgroundColor: theme.palette.background.paper\r\n            }\r\n        }\r\n    },\r\n    clearIndicator: {\r\n        '&.MuiAutocomplete-clearIndicator': {\r\n            color: '#B6B6B6',\r\n            '& .MuiSvgIcon-fontSizeSmall': {\r\n                width: '0.6em'\r\n            }\r\n        }\r\n    }\r\n}))(Autocomplete)","import React,{useState, useEffect} from 'react'\r\nimport { Grid, Typography,  Paper } from '@material-ui/core'\r\n\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport {  withStyles, makeStyles } from '@material-ui/core/styles'\r\n\r\n\r\n//redux\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport * as weatherActions from '../redux/Weather/weatherSlice'\r\n\r\nfunction FavoritePage() {\r\n\r\n    const classes = useStyles()\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n\r\n    const favorites = useSelector(state => state.weather.favorites)\r\n\r\n    const getMoreDetails = (location) => {\r\n        dispatch(weatherActions.setCurrentLocation({LocalizedName: location.name, Key: location.id}))\r\n        history.push('/')\r\n    }\r\n\r\n    return (\r\n        <Grid container style={{ padding: 60 }} justifyContent='flex-start' space={2}>\r\n            {favorites && favorites.map(favorite => (\r\n                <Grid item xs={12} sm={2} md={2}  style={{margin: 5, cursor: 'pointer'}} onClick={(e) => getMoreDetails(favorite)}>\r\n                    <Paper elevation={3}  className={classes.itemWeather}>\r\n                    <Grid container justifyContent='center'>\r\n                        <Grid item xs={12}>\r\n                            <Typography variant='subtitle1' className={classes.center}>{favorite.name}</Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Typography className={classes.center} variant='subtitle2'>{favorite.currentWeather[0].Temperature.Metric.Value} {favorite.currentWeather[0].Temperature.Metric.Unit}</Typography>\r\n                        </Grid>\r\n                        <Grid item container xs={12} justifyContent='center'>\r\n                            <Typography className={classes.center} variant='subtitle2' >{favorite.currentWeather[0].WeatherText}</Typography>\r\n                        </Grid>\r\n                     </Grid>\r\n                     </Paper>\r\n                </Grid>\r\n            ))}\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default FavoritePage\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    currentWeatherContainer: {\r\n      border: '1px solid black',\r\n      marginTop: 40,\r\n      padding: 20\r\n      \r\n    },\r\n    center: {\r\n        textAlign: 'center'\r\n    },\r\n    forecastContainer: {\r\n        marginTop: 30\r\n    },\r\n    capitalize: {\r\n        textTransform: 'capitalize'\r\n    },\r\n    itemWeather: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        padding:5\r\n    },\r\n\r\n    \r\n}))","import { Toolbar, AppBar, Grid, Typography } from '@material-ui/core';\r\nimport ToggleButton from '@material-ui/lab/ToggleButton';\r\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport React from 'react'\r\n\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport * as weatherActions from '../redux/Weather/weatherSlice'\r\n\r\n\r\nimport WbSunnyIcon from '@material-ui/icons/WbSunny'\r\nimport NightsStayIcon from '@material-ui/icons/NightsStay';\r\n\r\n\r\n\r\nfunction HeaderComponent() {\r\n    const classes = useStyles()\r\n    const styleMode = useSelector(state => state.weather.theme)\r\n    const dispatch = useDispatch()\r\n\r\n    const handleChange = (event, newAlignment) => {\r\n        dispatch(weatherActions.setTheme(newAlignment))\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <AppBar position='fixed' elevation={0} className={classes.appBar}>\r\n            <Toolbar style={{ paddingLeft: 20, minHeight: 50 }}>\r\n                <Grid container direction='row' justifyContent='space-between' alignItems='center'>\r\n                    <Grid item xs={4}>\r\n                        <Grid container alignItems='center'>\r\n                            <Grid item xs={12}>\r\n                                <Typography variant='h1'>\r\n                                    Weather App\r\n                                </Typography>\r\n                            </Grid>\r\n\r\n                        </Grid>\r\n\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                        <Grid container justifyContent='center'>\r\n                            <StyledToggleButtonGroup size=\"small\" value={styleMode} exclusive onChange={handleChange}>\r\n                                <StyledToggleButton value=\"light\" className={classes.toggle}>\r\n                                    <WbSunnyIcon className={classes.toggleIcon} />\r\n                                </StyledToggleButton>\r\n                                <StyledToggleButton value=\"dark\" className={classes.toggle}>\r\n                                    <NightsStayIcon className={classes.toggleIcon} />\r\n                                </StyledToggleButton>\r\n                            </StyledToggleButtonGroup>\r\n\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                        <Grid container justifyContent='flex-end'>\r\n                            <Grid item style={{ margin: 5 }}>\r\n                                <NavLink\r\n                                    to='/'\r\n                                    className={classes.navButton}\r\n                                >\r\n                                    Home\r\n                                </NavLink>\r\n                            </Grid>\r\n                            <Grid item style={{ margin: 5 }}>\r\n                                <NavLink\r\n                                    to='/favorite'\r\n                                    className={classes.navButton}\r\n                                >\r\n                                    Favorite\r\n                                </NavLink>\r\n                            </Grid>\r\n                        </Grid>\r\n\r\n                    </Grid>\r\n\r\n                </Grid>\r\n            </Toolbar>\r\n        </AppBar>\r\n    )\r\n}\r\n\r\nexport default HeaderComponent\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    appBar: {\r\n        backgroundColor: theme.palette.background.appbar,\r\n    },\r\n    navButton: {\r\n        color: theme.palette.button.main,\r\n        textDecoration: 'none',\r\n        fontWeight: 400,\r\n        fontSize: 16,\r\n        '&:hover': {\r\n            transition: '.2s',\r\n            backgroundColor: 'transparent',\r\n            color: theme.palette.button.main,\r\n            textDecoration: 'underline'\r\n        },\r\n    },\r\n    toggle: {\r\n        textTransform: 'capitalize',\r\n    },\r\n    toggleIcon: {\r\n        fill: theme.palette.button.text\r\n    }\r\n\r\n}));\r\n\r\n\r\nconst StyledToggleButtonGroup = withStyles((theme) => ({\r\n    grouped: {\r\n        margin: theme.spacing(0.5),\r\n        border: 'none',\r\n        '&:not(:first-child)': {\r\n            borderRadius: theme.shape.borderRadius,\r\n        },\r\n        '&:first-child': {\r\n            borderRadius: theme.shape.borderRadius,\r\n        },\r\n    },\r\n\r\n}))(ToggleButtonGroup);\r\n\r\nconst StyledToggleButton = withStyles((theme) => ({\r\n    root: {\r\n        '&.Mui-selected': {\r\n            backgroundColor: theme.palette.button.main,\r\n            '&:hover': {\r\n                backgroundColor: theme.palette.button.hover\r\n            },\r\n        },\r\n        '&:hover': {\r\n            backgroundColor: theme.palette.toggle.hover\r\n        }\r\n    }\r\n\r\n}))(ToggleButton)","import React from \"react\";\r\n// Material-UI\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Collapse, IconButton, Typography } from \"@material-ui/core\";\r\n\r\n// Redux\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport * as actionSnackBar from \"../redux/SnackBar/snackbarSlice\";\r\n\r\nexport default function CustomizedSnackBars() {\r\n\tconst classes = useStyles();\r\n\tconst dispatch = useDispatch();\r\n\tconst snackBarOBJ = useSelector(state => state.snackBar);\r\n\t\r\n\r\n\treturn (\r\n\t\t<div className={classes.root}>\r\n\t\t\t<Collapse in={snackBarOBJ.visible} timeout={400}>\r\n\t\t\t\t<Alert\r\n\t\t\t\t\televation={4}\r\n\t\t\t\t\tvariant=\"filled\"\r\n\t\t\t\t\tseverity={snackBarOBJ.type}>\r\n\t\t\t\t\t<Typography data-cy=\"snackbar-msg\" style={{ color: \"#FFFFFF\" }}>{snackBarOBJ.message}</Typography>\r\n\t\t\t\t</Alert>\r\n\t\t\t</Collapse>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    position: 'absolute',\r\n    top:'69px',\r\n    right:'30px',\r\n    width:'auto',\r\n    zIndex: 1400,\r\n    opacity:0.8,\r\n    '& > * + *': {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n    [theme.breakpoints.down('xs')]: {\r\n      position: 'absolute',\r\n      zIndex: 1400,\r\n      width:'90%',\r\n      right:'5%',\r\n    },\r\n  },\r\n}));\r\n","\nimport './App.css';\nimport React, { useEffect } from 'react'\nimport { Route, Switch } from 'react-router-dom'\n\nimport { createTheme, ThemeProvider } from '@material-ui/core/styles'\nimport WeatherPage from './pages/WeatherPage'\nimport FavoritePage from './pages/FavoritePage'\nimport HeaderComponent from './components/HeaderComponent';\nimport SnackBar from './components/SnackBar';\nimport { lightThemeColors, darkThemeColors } from './constants';\nimport { useSelector } from 'react-redux';\n\nfunction App() {\n\n  const theme = useSelector(state => state.weather.theme)\n\n  const darkTheme = createTheme({\n    palette: darkThemeColors,\n    typography: {\n      fontFamily: ['Urbanist', 'Quicksand', 'sans-serif'].join(','),\n      h1: {\n        fontSize: 20,\n        color: '#6C7678'\n      },\n      subtitle1: {\n        fontSize: 16,\n        fontWeight: 500,\n        color: '#6C7678'\n      },\n      subtitle2: {\n        fontSize: 16,\n        color: '#FFFFFF'\n      }\n\n    },\n    overrides: {\n\n    }\n  })\n\n  const lightTheme = createTheme({\n    palette: lightThemeColors,\n    typography: {\n      fontFamily: ['Urbanist', 'Quicksand', 'sans-serif'].join(','),\n      h1: {\n        fontSize: 20,\n        color: '#BABABA'\n      },\n      subtitle1: {\n        fontSize: 16,\n        fontWeight: 500,\n        color: '#BABABA'\n      },\n      subtitle2: {\n        fontSize: 16,\n        color: '#1A1A1A'\n      }\n\n    },\n    overrides: {\n\n    }\n  })\n\n  return (\n    <ThemeProvider theme={theme === 'dark' ? darkTheme : lightTheme}>\n      <HeaderComponent />\n      <div style={{\n        minHeight: '100vh',\n        backgroundColor: theme === 'dark' ? '#1A1A1A' : '#F6F6F6'\n      }}>\n        <SnackBar />\n        <Switch>\n          <Route exact path='/' component={WeatherPage} />\n          <Route exact path='/favorite' component={FavoritePage} />\n        </Switch>\n      </div>\n\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from '@reduxjs/toolkit'\r\nimport weatherSlice from '../redux/Weather/weatherSlice'\r\nimport snackBarSLice from '../redux/SnackBar/snackbarSlice'\r\n\r\n\r\n\r\nconst RootReducer = combineReducers({\r\n   weather: weatherSlice,\r\n   snackBar: snackBarSLice\r\n})\r\n\r\n\r\n\r\nexport default RootReducer","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport configureAppStore from './redux/store'\n\nconst store = configureAppStore()\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Router>\n        <App />\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import { createStore, applyMiddleware } from '@reduxjs/toolkit'\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport RootReducer from './reducers'\r\n\r\nexport default function configureAppStore (preloadedState) {\r\n  const middlewares = [thunkMiddleware]\r\n  const middlewareEnhancer = applyMiddleware(...middlewares)\r\n\r\n  const enhancers = [middlewareEnhancer]\r\n  const composedEnhancers = composeWithDevTools(...enhancers)\r\n\r\n  const store = createStore((RootReducer), preloadedState, composedEnhancers)\r\n\r\n  if (process.env.NODE_ENV !== 'production' && module.hot) {\r\n    module.hot.accept('./reducers', () => store.replaceReducer(RootReducer))\r\n  }\r\n\r\n  return store\r\n}"],"sourceRoot":""}